---
title: "Class 05: Data Visualization with GGPLOT"
author: "Chloe Wong (PID: A16893383)"
format: gfm
---

## Plotting in R

> Q1. For which phases is data visualization important in our scientific workflows?
All of the above.

> Q2. True or False? The ggplot2 package comes already installed with R?
FALSE

R has lots of ways to mke plots and figures. This includes so-called **base** graphics and packages like **ggplot2**

```{r}
plot(cars)
```


This is a **base** R plot of the in-built `cars` dataset that has only two columns:

```{r}
head(cars)
```


> Q. How would we plot this wee dataset with **ggplot2**?

> Q3. Which plot types are typically NOT used to compare distributions of numeric variables?
Network graphs

> Q4. Which statement about data visualization with ggplot2 is incorrect?
ggplot2 is the only way to create plots in R

All ggplot figures have at least 3 layers:

- **data**
- **aes** (how the data map to the plot)
- **geoms** (how we draw the plot, lines, points, etc.)

Before I use any new package I need to download and install it with the `install.packages()` command.

I never use `install.packages()` within my quarto document otherwise I will install the package over and over and over again - which is silly!

Once a package is installed I can load it up with the `library()` function.

```{r}
# install.packages("ggplot2")
library(ggplot2)

ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()
```


**Key-point**: For simple plots (like the one above) ggplot is more verbose (we need to do more typing) but as plots get more complicated ggplot starts to be more clear and simple than base R plot()

```{r}
ggplot(cars) +
  aes(speed, dist) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title="Stopping distance of old cars", subtitle= "From the in-bult cars dataset") +
  theme_bw()
```

> Q5. Which geometric layer should be used to create scatter plots in ggplot2?
geom_point()







Put all your code in here 

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
nrow(genes)
colnames(genes)
ncol(genes)
table(genes$State)
round(table(genes$State)/nrow(genes) * 100, 2)
```

> Q6. Use the nrow() function to find out how many genes are in this dataset. What is your answer?
5196

> Q7. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find?
4

> Q8. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer?
127

> Q9. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset?
2.44

`nrow()` and `ncol()`
`table()` is very useful for getting counts 
finally `round()`

A first plot: 

```{r}
p <- ggplot(genes) +
  aes(x=Condition1, y=Condition2, col=State) +
  geom_point()
```

Change the color scale so unchanging genes are not so obvious as I want to highlight the Up and Down genes. 
```{r}
p + theme_bw() +
  scale_colour_manual( values=c("blue","gray","red") ) +
labs(title="Gene Expresion Changes Upon Drug Treatment",
         x="Control (no drug) ",
         y="Drug Treatment")
```

**Going Further**

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)

library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)

library(ggplot2)

ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point(alpha=0.5)

ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, color = pop) +
  geom_point(alpha=0.8)

ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, size = pop) +
  geom_point(alpha=0.5)

ggplot(gapminder_2007) + 
  geom_point(aes(x = gdpPercap, y = lifeExp,
                 size = pop), alpha=0.5) + 
  scale_size_area(max_size = 10)

gapminder_1957 <- gapminder %>% filter(year==1957)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color=continent,
                 size = pop) +
  geom_point(alpha=0.7) + 
  scale_size_area(max_size = 10) 
```

> Q. How many years are in this dataset?
```{r}
length(gapminder$year)
```

```{r}
table(gapminder$year)
```

```{r}
unique(gapminder$year)
```


```{r}
length(unique(gapminder$year))
```

```{r}
library(dplyr)
```

```{r}
filter(gapminder, country=="United States")
```

> Q. Extract data for the US in 1992. 

```{r}
filter(gapminder, country=="United States", year=="1992")
```

> Q. Wht is the population of Ireland in the last year we have data for?

```{r}
filter(gapminder, country=="Ireland", year=="2007")
```

> Q. What countries in data set had pop smller than Ireland in 2007?

- First limit/subset the dataset to the year 2007

```{r}
gap07 <- filter(gapminder, year==2007)
```


- Then find the `pop` value for Ireland

```{r}
ire_pop <- filter(gap07, country=="Ireland")["pop"]
ire_pop
```


- Then extract all rows with `pop` less than Ireland's

```{r}
filter(gap07, pop < 4109086)
```

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year==2007)

ggplot(gapminder_1957) + 
  geom_point(aes(x = gdpPercap, y = lifeExp, color=continent,
                 size = pop), alpha=0.7) + 
  scale_size_area(max_size = 10) +
  facet_wrap(~year)
```

**OPTIONAL: Bar Charts**

```{r}
gapminder_top5 <- gapminder %>% 
  filter(year==2007) %>% 
  arrange(desc(pop)) %>% 
  top_n(5, pop)

gapminder_top5
```

```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop))

ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = continent))

ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = lifeExp))

ggplot(gapminder_top5) +
  aes(x=country, y=pop, fill=gdpPercap) +
  geom_col()

ggplot(gapminder_top5) +
  aes(x=reorder(country, -pop), y=pop, fill=gdpPercap) +
  geom_col()
```

```{r}
ggplot(gapminder_top5) +
  aes(x=reorder(country, -pop), y=pop, fill=country) +
  geom_col(col="gray30") +
  guides(fill="none")
```

```{r}
head(USArrests)

USArrests$State <- rownames(USArrests)
ggplot(USArrests) +
  aes(x=reorder(State,Murder), y=Murder) +
  geom_col() +
  coord_flip()

```

```{r}
ggplot(USArrests) +
  aes(x=reorder(State,Murder), y=Murder) +
  geom_point() +
  geom_segment(aes(x=State, 
                   xend=State, 
                   y=0, 
                   yend=Murder), color="blue") +
  coord_flip()
```

**Extensions: Animation**

```{r}
#| eval: false
library(gapminder)
library(gganimate)

ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  # Facet by continent
  facet_wrap(~continent) +
  # Here comes the gganimate specific bits
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  transition_time(year) +
  shadow_wake(wake_length = 0.1, alpha = FALSE)
```

**Combining Plots**

```{r}

library(patchwork)

p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
p4 <- ggplot(mtcars) + geom_bar(aes(carb))

(p1 | p2 | p3) /
      p4
```

**About this document**

```{r}
sessionInfo()
```


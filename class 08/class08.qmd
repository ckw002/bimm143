---
title: "Class 8: PCA Mini Project"
author: "Chloe Wong (PID: A16893383)"
format: pdf
---

It is important to consider scaling your data before analysis such as PCA. 

For example: 

```{r}
head(mtcars)
```

```{r}
colMeans(mtcars)
```

```{r}
apply(mtcars, 2, sd)
```

```{r}
x <- scale(mtcars)
head(x)
```

```{r}
round(colMeans(x), 2)
```


```{r}
fna.data <- "WisconsinCancer.csv"

wisc.df <- read.csv(fna.data, row.names=1)

head(wisc.df)
```

```{r}
diagnosis <- wisc.df[,1]
table(diagnosis)
```

Remove this first `diagnosis` column from the dataset as I don't want to pass this to PCA etc. It is essentially the expert "answer" that we will compare our analysis results to. 

```{r}
#We cab use -1 here to remove the first column 
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

##Exploratory data analysis 

> Q1. How many observations are in this dataset?

569 observations

```{r}
nrow(wisc.data)
```


> Q2. How many of the observations have a malignant diagnosis?

212 observations have a malignant diagnosis

```{r}
table(diagnosis)
```


> Q3. How many variables/features in the data are suffixed with _mean?

10 variables

```{r}
length( grep("_mean", colnames(wisc.data)))
```

##Principal Component Analysis

```{r}
colMeans(wisc.data)

apply(wisc.data,2,sd)
```


```{r}
wisc.pr <- prcomp( wisc.data, scale=T )
summary(wisc.pr)
```

Main "PC score plot", "PC1 vs PC2 plot"

See what is in our PCA results object:

```{r}
plot(wisc.pr$x)
#plot(wisc.pr$x)
```


```{r}
attributes(wisc.pr)
```

```{r}
head(wisc.pr$x)
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], 
     col=as.factor(diagnosis))
```


> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

0.4427 or 44.27%

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7

> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

There are a bunch of words with no points visable with the words also being unreadable. This plot is difficult to understand as you cannot make sense of the PCA result as the plot is unreadable and uninterpretable. 

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[, 1:3 ], col = as.factor(diagnosis), 
     xlab = "PC1", ylab = "PC3")
```

```{r}
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

library(ggplot2)

ggplot(df) + 
  aes(PC1, PC2, col=as.factor(diagnosis)) + 
  geom_point()
```

```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
pve <- pr.var / sum(pr.var)

plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

Concave.points_mean contributes to component of the loading vector by -0.26085376.

```{r}
wisc.pr$rotation[,1]
summary(wisc.pr)
```

> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

The minimum number of principal components required to explain 80% of the variance of the data 5.

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

The clustering model has 4 clusters at height = 32.

```{r}
data.scaled <- scale(wisc.data)

data.dist <- dist(data.scaled)

wisc.hclust <- hclust(data.dist, method="ward.D2")
```

```{r}
plot(wisc.hclust)
abline(h=32, col="red", lty=2)
```

> Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

No there is not a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10. 

```{r}
#distance matrix from PCA result
d <- dist( wisc.pr$x[, 1:3])
hc <-hclust(d, method="ward.D2")
plot(hc)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=2)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=3)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=4)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=5)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=6)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=7)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=8)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=9)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(hc, k=10)
table(wisc.hclust.clusters, diagnosis)
```

> Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

The method that gives me my favorite results for the same data.dist dataset is the PCA scatter plots. This is simply because I personally feel as though they are easier to read and interpret. The color coding makes it easy on the eye with the points being clearly visible while the hierarchical cluster is personally harder for me to distinguish different clusters and various points in the dataset.

##Combine PCA and clustering 

Our PCA results were in `wisc.pr$x`

```{r}
#distance matrix from PCA result
d <- dist( wisc.pr$x[, 1:3])
hc <-hclust(d, method="ward.D2")
plot(hc)
```

Cut tree into two groups/branches/clusters...

```{r}
grps <- cutree(hc, k=2)
```

```{r}
plot(wisc.pr$x, col=grps)
```

Compare my clustering result (my `grps`) to the expert `diagnosis`

```{r}
table(grps)
```

```{r}
table(diagnosis, grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
data.dist <- dist(wisc.pr$x[,1:7])
wisc.pr.hclust <- hclust(data.dist, method="ward.D2")
plot(wisc.pr.hclust)
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)
```

> Q15. How well does the newly created model with four clusters separate out the two diagnoses?

The newly created model with four clusters separates out the two diagnoses decently, but things to improve on include the number of outliers present. However, you are able to visibly see a distinct separation with the four clusters present. 

> Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

The k-means and hierarchical clustering model also do fairly well in terms of separating the diagnoses. However, my only critique is that with the clustering model, it is visually harder to see distinctions between the clusters and the data appears to be more widespread. 

```{r}
wisc.km <- kmeans(scale(wisc.data), centers=2, nstart=20)
```

```{r}
table(wisc.km$cluster, diagnosis)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```

Prediction: 

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q18. Which of these new patients should we prioritize for follow up based on your results?

Patient 1 should be prioritized for follow up based on my results as in the graph, the clustering of malignant is seen mainly near patient 1. 

```{r}
sessionInfo()
```

